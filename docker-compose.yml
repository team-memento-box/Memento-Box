version: "3.8"

services:
    web:
        build: ./app
        container_name: fastapi_app
        restart: always
        env_file:
            - .env
        volumes:
            - ./app:/app
            - ./.env:/app/.env
            - ./uploads:/app/uploads
            - ./app/alembic/versions:/app/alembic/versions
            - ./audio_files:/app/audio_files
            - ./static:/app/static
            - ./logs:/app/logs
        expose:
            - "8000"
        depends_on:
            db:
                condition: service_healthy
            dialogue:
                condition: service_healthy
            fish-speech:
                condition: service_healthy
        networks:
            - memento_net
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:8000/docs"]
            interval: 30s
            timeout: 10s
            retries: 3

    nginx:
        image: nginx:latest
        container_name: nginx_proxy
        restart: always
        ports:
            - "80:80"
        volumes:
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
            - ./static:/app/static
            - ./uploads:/app/uploads
            - ./audio_files:/app/audio
        depends_on:
            web:
                condition: service_healthy
        networks:
            - memento_net

    db:
        image: postgres:15
        container_name: postgres_db
        restart: always
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
            interval: 5s
            timeout: 5s
            retries: 5
        volumes:
            - fastapi-app_pgdata:/var/lib/postgresql/data
        networks:
            - memento_net

    dialogue:
        build: ./dialogue
        container_name: dialogue
        ports:
            - "5001:5001"
        volumes:
            - ./dialogue:/app
        env_file:
            - .env
        environment:
            - AZURE_OPENAI_API_KEY=${AZURE_OPENAI_API_KEY}
            - AZURE_OPENAI_ENDPOINT=${AZURE_OPENAI_ENDPOINT}
            - AZURE_OPENAI_API_VERSION=${AZURE_OPENAI_API_VERSION:-2023-05-15}
            - AZURE_OPENAI_DEPLOYMENT_NAME=${AZURE_OPENAI_DEPLOYMENT_NAME:-gpt-4}
        networks:
            - memento_net
        depends_on:
            db:
                condition: service_healthy
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:5001/status"]
            interval: 30s
            timeout: 10s
            retries: 3

    fish-speech:
        build: ./fish-speech
        container_name: fish-speech
        ports:
            - "5000:5000"
        volumes:
            - ./fish-speech:/app
            - ./shared/input_wav:/app/input_wav
            - ./shared/output_wav:/app/output_wav
            - ./shared/model_output:/app/model_output
        environment:
            - AZURE_SPEECH_KEY=${AZURE_SPEECH_KEY}
            - AZURE_SPEECH_REGION=${AZURE_SPEECH_REGION}
        networks:
            - memento_net
        depends_on:
            db:
                condition: service_healthy
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:5000/status"]
            interval: 30s
            timeout: 10s
            retries: 3

volumes:
    fastapi-app_pgdata:

networks:
    memento_net:
