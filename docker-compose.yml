version: "3.8"

services:
    web:
        build: ./app
        container_name: fastapi_app
        restart: always
        env_file:
            - .env
        volumes:
            - ./app:/app
            - ./.env:/app/.env
            - ./uploads:/app/uploads
            - ./app/alembic/versions:/app/alembic/versions
        expose:
            - "8000"
        depends_on:
            - db
        networks:
            - memento_net

    nginx:
        image: nginx:latest
        container_name: nginx_proxy
        restart: always
        ports:
            - "80:80"
        volumes:
            - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
        depends_on:
            - web
        networks:
            - memento_net

    db:
        image: postgres:15
        container_name: postgres_db
        restart: always
        ports:
            - "5432:5432"
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
        healthcheck:
            test:
                [
                    "CMD-SHELL",
                    "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}",
                ]
            interval: 5s
            timeout: 5s
            retries: 5
        volumes:
            - fastapi-app_pgdata:/var/lib/postgresql/data
        networks:
            - memento_net

    # dialogue:
    #   build:
    #     context: ./dialogue
    #   container_name: dialogue
    #   expose:
    #     - "6060"
    #   env_file:
    #     - ./dialogue/.env
    #   networks:
    #     - memento_net
    #   depends_on:
    #     db:
    #       condition: service_healthy

    fish-speech:
      build:
        context: ./fish-speech
        dockerfile: Dockerfile
      container_name: fish-speech
      expose:
        - "5000"
      volumes:
        - ./fish-speech/checkpoints:/app/checkpoints
        - ./shared/input_wav:/app/input_wav
        - ./shared/output_wav:/app/output_wav
        - ./shared/model_output:/app/model_output
      runtime: nvidia
      environment:
        - NVIDIA_VISIBLE_DEVICES=all
      networks:
        - memento_net
      depends_on:
        db:
          condition: service_healthy

volumes:
    fastapi-app_pgdata:

networks:
    memento_net:
